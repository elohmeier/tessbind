name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Many color libraries just need this to be set to any value, but at least
  # one distinguishes color depth, where "3" -> "256-bit color".
  FORCE_COLOR: 3

jobs:
  pre-commit:
    name: Format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: pre-commit/action@v3.0.1
        with:
          extra_args: --hook-stage manual --all-files
      - name: Install dependencies
        run: |
          sudo apt-get install libleptonica-dev libtesseract-dev -y
      - name: Run PyLint
        run: pipx run nox -s pylint -- --output-format=github

  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    needs: [pre-commit]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.13"]
        runs-on: [ubuntu-24.04, macos-14]

    steps:
      - name: Install dependencies on Linux
        run: |
          sudo apt-get install libleptonica-dev libtesseract-dev -y
          sudo apt-get --no-install-recommends install tesseract-ocr-eng -y
        if: runner.os == 'Linux'

      - name: Install dependencies on macOS
        run: |
          brew install leptonica tesseract
          echo 'CPPFLAGS="-I/opt/homebrew/include"' >> $GITHUB_ENV
          echo 'LDFLAGS="-L/opt/homebrew/lib"' >> $GITHUB_ENV
          echo 'PKG_CONFIG_PATH="/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH"' >> $GITHUB_ENV
        if: runner.os == 'macOS'

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install package
        run: python -m pip install .[test]

      - name: Test package
        run: >-
          python -m pytest -ra --cov --cov-report=xml --cov-report=term
          --durations=20

      - name: Upload coverage report
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
